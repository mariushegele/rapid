Terminals which are not used

   string
   undefined


Grammar

    0 $accept: S $end

    1 S: Clause
    2  | S Clause
    3  | S Comment
    4  | Comment
    5  | S end
    6  | end

    7 Clause: Rule
    8       | Fact

    9 Rule: Predicate left_arrow PredicateList dot

   10 Fact: Predicate dot

   11 PredicateList: Predicate
   12              | Predicate comma PredicateList

   13 Predicate: atom open_round_brackets TermList close_round_brackets
   14          | Condition
   15          | Assignment

   16 TermList: Term
   17         | Term comma TermList

   18 Term: Operand
   19     | List
   20     | Function

   21 Function: atom open_round_brackets TermList close_round_brackets

   22 List: open_square_brackets close_square_brackets
   23     | open_square_brackets Operand close_square_brackets
   24     | open_square_brackets List close_square_brackets
   25     | open_square_brackets List comma List close_square_brackets
   26     | open_square_brackets Operand pipesym RestList close_square_brackets

   27 RestList: List
   28         | Operand

   29 Operand: variable
   30        | Operation
   31        | Constant

   32 Constant: num
   33         | real

   34 Operation: open_round_brackets Operation close_round_brackets
   35          | Operand plus Operand
   36          | Operand minus Operand
   37          | Operand times Operand
   38          | Operand divby Operand

   39 Condition: Operand greater Operand
   40          | Operand smaller Operand
   41          | Operand greater equal Operand
   42          | Operand equal smaller Operand
   43          | Operand equal equal Operand
   44          | Operand equal colon equal Operand
   45          | Operand equal whatthehell equal Operand
   46          | Operand whatthehell equal equal Operand
   47          | Term is Operand

   48 Assignment: Operand equal Operand
   49           | Operand whatthehell equal Operand

   50 Comment: comment
   51        | ml_comment


Terminals, with rules where they appear

$end (0) 0
error (256)
left_arrow (258) 9
is (259) 47
atom (260) 13 21
variable (261) 29
num (262) 32
real (263) 33
string (264)
open_round_brackets (265) 13 21 34
close_round_brackets (266) 13 21 34
open_square_brackets (267) 22 23 24 25 26
close_square_brackets (268) 22 23 24 25 26
pipesym (269) 26
dot (270) 9 10
comma (271) 12 17 25
smaller (272) 40 42
greater (273) 39 41
equal (274) 41 42 43 44 45 46 48 49
colon (275) 44
whatthehell (276) 45 46 49
plus (277) 35
minus (278) 36
times (279) 37
divby (280) 38
comment (281) 50
ml_comment (282) 51
end (283) 5 6
undefined (284)


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
S (31)
    on left: 1 2 3 4 5 6, on right: 0 2 3 5
Clause (32)
    on left: 7 8, on right: 1 2
Rule (33)
    on left: 9, on right: 7
Fact (34)
    on left: 10, on right: 8
PredicateList (35)
    on left: 11 12, on right: 9 12
Predicate (36)
    on left: 13 14 15, on right: 9 10 11 12
TermList (37)
    on left: 16 17, on right: 13 17 21
Term (38)
    on left: 18 19 20, on right: 16 17 47
Function (39)
    on left: 21, on right: 20
List (40)
    on left: 22 23 24 25 26, on right: 19 24 25 27
RestList (41)
    on left: 27 28, on right: 26
Operand (42)
    on left: 29 30 31, on right: 18 23 26 28 35 36 37 38 39 40 41 42
    43 44 45 46 47 48 49
Constant (43)
    on left: 32 33, on right: 31
Operation (44)
    on left: 34 35 36 37 38, on right: 30 34
Condition (45)
    on left: 39 40 41 42 43 44 45 46 47, on right: 14
Assignment (46)
    on left: 48 49, on right: 15
Comment (47)
    on left: 50 51, on right: 3 4


state 0

    0 $accept: . S $end

    atom                  shift, and go to state 1
    variable              shift, and go to state 2
    num                   shift, and go to state 3
    real                  shift, and go to state 4
    open_round_brackets   shift, and go to state 5
    open_square_brackets  shift, and go to state 6
    comment               shift, and go to state 7
    ml_comment            shift, and go to state 8
    end                   shift, and go to state 9

    S           go to state 10
    Clause      go to state 11
    Rule        go to state 12
    Fact        go to state 13
    Predicate   go to state 14
    Term        go to state 15
    Function    go to state 16
    List        go to state 17
    Operand     go to state 18
    Constant    go to state 19
    Operation   go to state 20
    Condition   go to state 21
    Assignment  go to state 22
    Comment     go to state 23


state 1

   13 Predicate: atom . open_round_brackets TermList close_round_brackets
   21 Function: atom . open_round_brackets TermList close_round_brackets

    open_round_brackets  shift, and go to state 24


state 2

   29 Operand: variable .

    $default  reduce using rule 29 (Operand)


state 3

   32 Constant: num .

    $default  reduce using rule 32 (Constant)


state 4

   33 Constant: real .

    $default  reduce using rule 33 (Constant)


state 5

   34 Operation: open_round_brackets . Operation close_round_brackets

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 25
    Constant   go to state 19
    Operation  go to state 26


state 6

   22 List: open_square_brackets . close_square_brackets
   23     | open_square_brackets . Operand close_square_brackets
   24     | open_square_brackets . List close_square_brackets
   25     | open_square_brackets . List comma List close_square_brackets
   26     | open_square_brackets . Operand pipesym RestList close_square_brackets

    variable               shift, and go to state 2
    num                    shift, and go to state 3
    real                   shift, and go to state 4
    open_round_brackets    shift, and go to state 5
    open_square_brackets   shift, and go to state 6
    close_square_brackets  shift, and go to state 27

    List       go to state 28
    Operand    go to state 29
    Constant   go to state 19
    Operation  go to state 20


state 7

   50 Comment: comment .

    $default  reduce using rule 50 (Comment)


state 8

   51 Comment: ml_comment .

    $default  reduce using rule 51 (Comment)


state 9

    6 S: end .

    $default  reduce using rule 6 (S)


state 10

    0 $accept: S . $end
    2 S: S . Clause
    3  | S . Comment
    5  | S . end

    $end                  shift, and go to state 30
    atom                  shift, and go to state 1
    variable              shift, and go to state 2
    num                   shift, and go to state 3
    real                  shift, and go to state 4
    open_round_brackets   shift, and go to state 5
    open_square_brackets  shift, and go to state 6
    comment               shift, and go to state 7
    ml_comment            shift, and go to state 8
    end                   shift, and go to state 31

    Clause      go to state 32
    Rule        go to state 12
    Fact        go to state 13
    Predicate   go to state 14
    Term        go to state 15
    Function    go to state 16
    List        go to state 17
    Operand     go to state 18
    Constant    go to state 19
    Operation   go to state 20
    Condition   go to state 21
    Assignment  go to state 22
    Comment     go to state 33


state 11

    1 S: Clause .

    $default  reduce using rule 1 (S)


state 12

    7 Clause: Rule .

    $default  reduce using rule 7 (Clause)


state 13

    8 Clause: Fact .

    $default  reduce using rule 8 (Clause)


state 14

    9 Rule: Predicate . left_arrow PredicateList dot
   10 Fact: Predicate . dot

    left_arrow  shift, and go to state 34
    dot         shift, and go to state 35


state 15

   47 Condition: Term . is Operand

    is  shift, and go to state 36


state 16

   20 Term: Function .

    $default  reduce using rule 20 (Term)


state 17

   19 Term: List .

    $default  reduce using rule 19 (Term)


state 18

   18 Term: Operand .
   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   39 Condition: Operand . greater Operand
   40          | Operand . smaller Operand
   41          | Operand . greater equal Operand
   42          | Operand . equal smaller Operand
   43          | Operand . equal equal Operand
   44          | Operand . equal colon equal Operand
   45          | Operand . equal whatthehell equal Operand
   46          | Operand . whatthehell equal equal Operand
   48 Assignment: Operand . equal Operand
   49           | Operand . whatthehell equal Operand

    smaller      shift, and go to state 37
    greater      shift, and go to state 38
    equal        shift, and go to state 39
    whatthehell  shift, and go to state 40
    plus         shift, and go to state 41
    minus        shift, and go to state 42
    times        shift, and go to state 43
    divby        shift, and go to state 44

    $default  reduce using rule 18 (Term)


state 19

   31 Operand: Constant .

    $default  reduce using rule 31 (Operand)


state 20

   30 Operand: Operation .

    $default  reduce using rule 30 (Operand)


state 21

   14 Predicate: Condition .

    $default  reduce using rule 14 (Predicate)


state 22

   15 Predicate: Assignment .

    $default  reduce using rule 15 (Predicate)


state 23

    4 S: Comment .

    $default  reduce using rule 4 (S)


state 24

   13 Predicate: atom open_round_brackets . TermList close_round_brackets
   21 Function: atom open_round_brackets . TermList close_round_brackets

    atom                  shift, and go to state 45
    variable              shift, and go to state 2
    num                   shift, and go to state 3
    real                  shift, and go to state 4
    open_round_brackets   shift, and go to state 5
    open_square_brackets  shift, and go to state 6

    TermList   go to state 46
    Term       go to state 47
    Function   go to state 16
    List       go to state 17
    Operand    go to state 48
    Constant   go to state 19
    Operation  go to state 20


state 25

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44


state 26

   30 Operand: Operation .
   34 Operation: open_round_brackets Operation . close_round_brackets

    close_round_brackets  shift, and go to state 49

    $default  reduce using rule 30 (Operand)


state 27

   22 List: open_square_brackets close_square_brackets .

    $default  reduce using rule 22 (List)


state 28

   24 List: open_square_brackets List . close_square_brackets
   25     | open_square_brackets List . comma List close_square_brackets

    close_square_brackets  shift, and go to state 50
    comma                  shift, and go to state 51


state 29

   23 List: open_square_brackets Operand . close_square_brackets
   26     | open_square_brackets Operand . pipesym RestList close_square_brackets
   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand

    close_square_brackets  shift, and go to state 52
    pipesym                shift, and go to state 53
    plus                   shift, and go to state 41
    minus                  shift, and go to state 42
    times                  shift, and go to state 43
    divby                  shift, and go to state 44


state 30

    0 $accept: S $end .

    $default  accept


state 31

    5 S: S end .

    $default  reduce using rule 5 (S)


state 32

    2 S: S Clause .

    $default  reduce using rule 2 (S)


state 33

    3 S: S Comment .

    $default  reduce using rule 3 (S)


state 34

    9 Rule: Predicate left_arrow . PredicateList dot

    atom                  shift, and go to state 1
    variable              shift, and go to state 2
    num                   shift, and go to state 3
    real                  shift, and go to state 4
    open_round_brackets   shift, and go to state 5
    open_square_brackets  shift, and go to state 6

    PredicateList  go to state 54
    Predicate      go to state 55
    Term           go to state 15
    Function       go to state 16
    List           go to state 17
    Operand        go to state 18
    Constant       go to state 19
    Operation      go to state 20
    Condition      go to state 21
    Assignment     go to state 22


state 35

   10 Fact: Predicate dot .

    $default  reduce using rule 10 (Fact)


state 36

   47 Condition: Term is . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 56
    Constant   go to state 19
    Operation  go to state 20


state 37

   40 Condition: Operand smaller . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 57
    Constant   go to state 19
    Operation  go to state 20


state 38

   39 Condition: Operand greater . Operand
   41          | Operand greater . equal Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5
    equal                shift, and go to state 58

    Operand    go to state 59
    Constant   go to state 19
    Operation  go to state 20


state 39

   42 Condition: Operand equal . smaller Operand
   43          | Operand equal . equal Operand
   44          | Operand equal . colon equal Operand
   45          | Operand equal . whatthehell equal Operand
   48 Assignment: Operand equal . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5
    smaller              shift, and go to state 60
    equal                shift, and go to state 61
    colon                shift, and go to state 62
    whatthehell          shift, and go to state 63

    Operand    go to state 64
    Constant   go to state 19
    Operation  go to state 20


state 40

   46 Condition: Operand whatthehell . equal equal Operand
   49 Assignment: Operand whatthehell . equal Operand

    equal  shift, and go to state 65


state 41

   35 Operation: Operand plus . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 66
    Constant   go to state 19
    Operation  go to state 20


state 42

   36 Operation: Operand minus . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 67
    Constant   go to state 19
    Operation  go to state 20


state 43

   37 Operation: Operand times . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 68
    Constant   go to state 19
    Operation  go to state 20


state 44

   38 Operation: Operand divby . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 69
    Constant   go to state 19
    Operation  go to state 20


state 45

   21 Function: atom . open_round_brackets TermList close_round_brackets

    open_round_brackets  shift, and go to state 70


state 46

   13 Predicate: atom open_round_brackets TermList . close_round_brackets
   21 Function: atom open_round_brackets TermList . close_round_brackets

    close_round_brackets  shift, and go to state 71


state 47

   16 TermList: Term .
   17         | Term . comma TermList

    comma  shift, and go to state 72

    $default  reduce using rule 16 (TermList)


state 48

   18 Term: Operand .
   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 18 (Term)


state 49

   34 Operation: open_round_brackets Operation close_round_brackets .

    $default  reduce using rule 34 (Operation)


state 50

   24 List: open_square_brackets List close_square_brackets .

    $default  reduce using rule 24 (List)


state 51

   25 List: open_square_brackets List comma . List close_square_brackets

    open_square_brackets  shift, and go to state 6

    List  go to state 73


state 52

   23 List: open_square_brackets Operand close_square_brackets .

    $default  reduce using rule 23 (List)


state 53

   26 List: open_square_brackets Operand pipesym . RestList close_square_brackets

    variable              shift, and go to state 2
    num                   shift, and go to state 3
    real                  shift, and go to state 4
    open_round_brackets   shift, and go to state 5
    open_square_brackets  shift, and go to state 6

    List       go to state 74
    RestList   go to state 75
    Operand    go to state 76
    Constant   go to state 19
    Operation  go to state 20


state 54

    9 Rule: Predicate left_arrow PredicateList . dot

    dot  shift, and go to state 77


state 55

   11 PredicateList: Predicate .
   12              | Predicate . comma PredicateList

    comma  shift, and go to state 78

    $default  reduce using rule 11 (PredicateList)


state 56

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   47 Condition: Term is Operand .

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 47 (Condition)


state 57

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   40 Condition: Operand smaller Operand .

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 40 (Condition)


state 58

   41 Condition: Operand greater equal . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 79
    Constant   go to state 19
    Operation  go to state 20


state 59

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   39 Condition: Operand greater Operand .

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 39 (Condition)


state 60

   42 Condition: Operand equal smaller . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 80
    Constant   go to state 19
    Operation  go to state 20


state 61

   43 Condition: Operand equal equal . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 81
    Constant   go to state 19
    Operation  go to state 20


state 62

   44 Condition: Operand equal colon . equal Operand

    equal  shift, and go to state 82


state 63

   45 Condition: Operand equal whatthehell . equal Operand

    equal  shift, and go to state 83


state 64

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   48 Assignment: Operand equal Operand .

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 48 (Assignment)


state 65

   46 Condition: Operand whatthehell equal . equal Operand
   49 Assignment: Operand whatthehell equal . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5
    equal                shift, and go to state 84

    Operand    go to state 85
    Constant   go to state 19
    Operation  go to state 20


state 66

   35 Operation: Operand . plus Operand
   35          | Operand plus Operand .
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand

    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 35 (Operation)


state 67

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   36          | Operand minus Operand .
   37          | Operand . times Operand
   38          | Operand . divby Operand

    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 36 (Operation)


state 68

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   37          | Operand times Operand .
   38          | Operand . divby Operand

    $default  reduce using rule 37 (Operation)


state 69

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   38          | Operand divby Operand .

    $default  reduce using rule 38 (Operation)


state 70

   21 Function: atom open_round_brackets . TermList close_round_brackets

    atom                  shift, and go to state 45
    variable              shift, and go to state 2
    num                   shift, and go to state 3
    real                  shift, and go to state 4
    open_round_brackets   shift, and go to state 5
    open_square_brackets  shift, and go to state 6

    TermList   go to state 86
    Term       go to state 47
    Function   go to state 16
    List       go to state 17
    Operand    go to state 48
    Constant   go to state 19
    Operation  go to state 20


state 71

   13 Predicate: atom open_round_brackets TermList close_round_brackets .
   21 Function: atom open_round_brackets TermList close_round_brackets .

    is        reduce using rule 21 (Function)
    $default  reduce using rule 13 (Predicate)


state 72

   17 TermList: Term comma . TermList

    atom                  shift, and go to state 45
    variable              shift, and go to state 2
    num                   shift, and go to state 3
    real                  shift, and go to state 4
    open_round_brackets   shift, and go to state 5
    open_square_brackets  shift, and go to state 6

    TermList   go to state 87
    Term       go to state 47
    Function   go to state 16
    List       go to state 17
    Operand    go to state 48
    Constant   go to state 19
    Operation  go to state 20


state 73

   25 List: open_square_brackets List comma List . close_square_brackets

    close_square_brackets  shift, and go to state 88


state 74

   27 RestList: List .

    $default  reduce using rule 27 (RestList)


state 75

   26 List: open_square_brackets Operand pipesym RestList . close_square_brackets

    close_square_brackets  shift, and go to state 89


state 76

   28 RestList: Operand .
   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 28 (RestList)


state 77

    9 Rule: Predicate left_arrow PredicateList dot .

    $default  reduce using rule 9 (Rule)


state 78

   12 PredicateList: Predicate comma . PredicateList

    atom                  shift, and go to state 1
    variable              shift, and go to state 2
    num                   shift, and go to state 3
    real                  shift, and go to state 4
    open_round_brackets   shift, and go to state 5
    open_square_brackets  shift, and go to state 6

    PredicateList  go to state 90
    Predicate      go to state 55
    Term           go to state 15
    Function       go to state 16
    List           go to state 17
    Operand        go to state 18
    Constant       go to state 19
    Operation      go to state 20
    Condition      go to state 21
    Assignment     go to state 22


state 79

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   41 Condition: Operand greater equal Operand .

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 41 (Condition)


state 80

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   42 Condition: Operand equal smaller Operand .

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 42 (Condition)


state 81

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   43 Condition: Operand equal equal Operand .

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 43 (Condition)


state 82

   44 Condition: Operand equal colon equal . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 91
    Constant   go to state 19
    Operation  go to state 20


state 83

   45 Condition: Operand equal whatthehell equal . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 92
    Constant   go to state 19
    Operation  go to state 20


state 84

   46 Condition: Operand whatthehell equal equal . Operand

    variable             shift, and go to state 2
    num                  shift, and go to state 3
    real                 shift, and go to state 4
    open_round_brackets  shift, and go to state 5

    Operand    go to state 93
    Constant   go to state 19
    Operation  go to state 20


state 85

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   49 Assignment: Operand whatthehell equal Operand .

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 49 (Assignment)


state 86

   21 Function: atom open_round_brackets TermList . close_round_brackets

    close_round_brackets  shift, and go to state 94


state 87

   17 TermList: Term comma TermList .

    $default  reduce using rule 17 (TermList)


state 88

   25 List: open_square_brackets List comma List close_square_brackets .

    $default  reduce using rule 25 (List)


state 89

   26 List: open_square_brackets Operand pipesym RestList close_square_brackets .

    $default  reduce using rule 26 (List)


state 90

   12 PredicateList: Predicate comma PredicateList .

    $default  reduce using rule 12 (PredicateList)


state 91

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   44 Condition: Operand equal colon equal Operand .

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 44 (Condition)


state 92

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   45 Condition: Operand equal whatthehell equal Operand .

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 45 (Condition)


state 93

   35 Operation: Operand . plus Operand
   36          | Operand . minus Operand
   37          | Operand . times Operand
   38          | Operand . divby Operand
   46 Condition: Operand whatthehell equal equal Operand .

    plus   shift, and go to state 41
    minus  shift, and go to state 42
    times  shift, and go to state 43
    divby  shift, and go to state 44

    $default  reduce using rule 46 (Condition)


state 94

   21 Function: atom open_round_brackets TermList close_round_brackets .

    $default  reduce using rule 21 (Function)
