Terminals which are not used

   string
   undefined


State 5 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce
State 19 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: M Clause
    2  | S M Clause
    3  | S Comment
    4  | Comment
    5  | S end
    6  | end

    7 M: /* empty */

    8 Clause: Rule
    9       | Fact

   10 Rule: Predicate left_arrow PredicateList dot

   11 Fact: Predicate dot

   12 PredicateList: Predicate
   13              | Predicate comma PredicateList

   14 Predicate: atom open_round_brackets PredMark TermList close_round_brackets
   15          | PredMark Condition
   16          | PredMark Assignment

   17 PredMark: /* empty */

   18 TermList: Term
   19         | Term comma TermList

   20 Term: Operand
   21     | List
   22     | Function

   23 Function: atom open_round_brackets TermList close_round_brackets

   24 List: open_square_brackets close_square_brackets
   25     | open_square_brackets Operand close_square_brackets
   26     | open_square_brackets List close_square_brackets
   27     | open_square_brackets List comma List close_square_brackets
   28     | open_square_brackets Operand pipesym RestList close_square_brackets

   29 RestList: List
   30         | Operand

   31 Operand: variable
   32        | Operation
   33        | Constant

   34 Constant: num
   35         | real

   36 Operation: open_round_brackets Operation close_round_brackets
   37          | Operand plus Operand
   38          | Operand minus Operand
   39          | Operand times Operand
   40          | Operand divby Operand

   41 Condition: Operand greater Operand
   42          | Operand smaller Operand
   43          | Operand greater equal Operand
   44          | Operand equal smaller Operand
   45          | Operand equal equal Operand
   46          | Operand equal colon equal Operand
   47          | Operand equal whatthehell equal Operand
   48          | Operand whatthehell equal equal Operand
   49          | Term is Operand

   50 Assignment: Operand equal Operand
   51           | Operand whatthehell equal Operand

   52 Comment: comment
   53        | ml_comment


Terminals, with rules where they appear

$end (0) 0
error (256)
left_arrow (258) 10
is (259) 49
atom (260) 14 23
variable (261) 31
num (262) 34
real (263) 35
string (264)
open_round_brackets (265) 14 23 36
close_round_brackets (266) 14 23 36
open_square_brackets (267) 24 25 26 27 28
close_square_brackets (268) 24 25 26 27 28
pipesym (269) 28
dot (270) 10 11
comma (271) 13 19 27
smaller (272) 42 44
greater (273) 41 43
equal (274) 43 44 45 46 47 48 50 51
colon (275) 46
whatthehell (276) 47 48 51
plus (277) 37
minus (278) 38
times (279) 39
divby (280) 40
comment (281) 52
ml_comment (282) 53
end (283) 5 6
undefined (284)


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
S (31)
    on left: 1 2 3 4 5 6, on right: 0 2 3 5
M (32)
    on left: 7, on right: 1 2
Clause (33)
    on left: 8 9, on right: 1 2
Rule (34)
    on left: 10, on right: 8
Fact (35)
    on left: 11, on right: 9
PredicateList (36)
    on left: 12 13, on right: 10 13
Predicate (37)
    on left: 14 15 16, on right: 10 11 12 13
PredMark (38)
    on left: 17, on right: 14 15 16
TermList (39)
    on left: 18 19, on right: 14 19 23
Term (40)
    on left: 20 21 22, on right: 18 19 49
Function (41)
    on left: 23, on right: 22
List (42)
    on left: 24 25 26 27 28, on right: 21 26 27 29
RestList (43)
    on left: 29 30, on right: 28
Operand (44)
    on left: 31 32 33, on right: 20 25 28 30 37 38 39 40 41 42 43 44
    45 46 47 48 49 50 51
Constant (45)
    on left: 34 35, on right: 33
Operation (46)
    on left: 36 37 38 39 40, on right: 32 36
Condition (47)
    on left: 41 42 43 44 45 46 47 48 49, on right: 15
Assignment (48)
    on left: 50 51, on right: 16
Comment (49)
    on left: 52 53, on right: 3 4


state 0

    0 $accept: . S $end

    comment     shift, and go to state 1
    ml_comment  shift, and go to state 2
    end         shift, and go to state 3

    $default  reduce using rule 7 (M)

    S        go to state 4
    M        go to state 5
    Comment  go to state 6


state 1

   52 Comment: comment .

    $default  reduce using rule 52 (Comment)


state 2

   53 Comment: ml_comment .

    $default  reduce using rule 53 (Comment)


state 3

    6 S: end .

    $default  reduce using rule 6 (S)


state 4

    0 $accept: S . $end
    2 S: S . M Clause
    3  | S . Comment
    5  | S . end

    $end        shift, and go to state 7
    comment     shift, and go to state 1
    ml_comment  shift, and go to state 2
    end         shift, and go to state 8

    $default  reduce using rule 7 (M)

    M        go to state 9
    Comment  go to state 10


state 5

    1 S: M . Clause

    atom  shift, and go to state 11

    atom      [reduce using rule 17 (PredMark)]
    $default  reduce using rule 17 (PredMark)

    Clause     go to state 12
    Rule       go to state 13
    Fact       go to state 14
    Predicate  go to state 15
    PredMark   go to state 16


state 6

    4 S: Comment .

    $default  reduce using rule 4 (S)


state 7

    0 $accept: S $end .

    $default  accept


state 8

    5 S: S end .

    $default  reduce using rule 5 (S)


state 9

    2 S: S M . Clause

    atom  shift, and go to state 11

    atom      [reduce using rule 17 (PredMark)]
    $default  reduce using rule 17 (PredMark)

    Clause     go to state 17
    Rule       go to state 13
    Fact       go to state 14
    Predicate  go to state 15
    PredMark   go to state 16


state 10

    3 S: S Comment .

    $default  reduce using rule 3 (S)


state 11

   14 Predicate: atom . open_round_brackets PredMark TermList close_round_brackets

    open_round_brackets  shift, and go to state 18


state 12

    1 S: M Clause .

    $default  reduce using rule 1 (S)


state 13

    8 Clause: Rule .

    $default  reduce using rule 8 (Clause)


state 14

    9 Clause: Fact .

    $default  reduce using rule 9 (Clause)


state 15

   10 Rule: Predicate . left_arrow PredicateList dot
   11 Fact: Predicate . dot

    left_arrow  shift, and go to state 19
    dot         shift, and go to state 20


state 16

   15 Predicate: PredMark . Condition
   16          | PredMark . Assignment

    atom                  shift, and go to state 21
    variable              shift, and go to state 22
    num                   shift, and go to state 23
    real                  shift, and go to state 24
    open_round_brackets   shift, and go to state 25
    open_square_brackets  shift, and go to state 26

    Term        go to state 27
    Function    go to state 28
    List        go to state 29
    Operand     go to state 30
    Constant    go to state 31
    Operation   go to state 32
    Condition   go to state 33
    Assignment  go to state 34


state 17

    2 S: S M Clause .

    $default  reduce using rule 2 (S)


state 18

   14 Predicate: atom open_round_brackets . PredMark TermList close_round_brackets

    $default  reduce using rule 17 (PredMark)

    PredMark  go to state 35


state 19

   10 Rule: Predicate left_arrow . PredicateList dot

    atom  shift, and go to state 11

    atom      [reduce using rule 17 (PredMark)]
    $default  reduce using rule 17 (PredMark)

    PredicateList  go to state 36
    Predicate      go to state 37
    PredMark       go to state 16


state 20

   11 Fact: Predicate dot .

    $default  reduce using rule 11 (Fact)


state 21

   23 Function: atom . open_round_brackets TermList close_round_brackets

    open_round_brackets  shift, and go to state 38


state 22

   31 Operand: variable .

    $default  reduce using rule 31 (Operand)


state 23

   34 Constant: num .

    $default  reduce using rule 34 (Constant)


state 24

   35 Constant: real .

    $default  reduce using rule 35 (Constant)


state 25

   36 Operation: open_round_brackets . Operation close_round_brackets

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 39
    Constant   go to state 31
    Operation  go to state 40


state 26

   24 List: open_square_brackets . close_square_brackets
   25     | open_square_brackets . Operand close_square_brackets
   26     | open_square_brackets . List close_square_brackets
   27     | open_square_brackets . List comma List close_square_brackets
   28     | open_square_brackets . Operand pipesym RestList close_square_brackets

    variable               shift, and go to state 22
    num                    shift, and go to state 23
    real                   shift, and go to state 24
    open_round_brackets    shift, and go to state 25
    open_square_brackets   shift, and go to state 26
    close_square_brackets  shift, and go to state 41

    List       go to state 42
    Operand    go to state 43
    Constant   go to state 31
    Operation  go to state 32


state 27

   49 Condition: Term . is Operand

    is  shift, and go to state 44


state 28

   22 Term: Function .

    $default  reduce using rule 22 (Term)


state 29

   21 Term: List .

    $default  reduce using rule 21 (Term)


state 30

   20 Term: Operand .
   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   41 Condition: Operand . greater Operand
   42          | Operand . smaller Operand
   43          | Operand . greater equal Operand
   44          | Operand . equal smaller Operand
   45          | Operand . equal equal Operand
   46          | Operand . equal colon equal Operand
   47          | Operand . equal whatthehell equal Operand
   48          | Operand . whatthehell equal equal Operand
   50 Assignment: Operand . equal Operand
   51           | Operand . whatthehell equal Operand

    smaller      shift, and go to state 45
    greater      shift, and go to state 46
    equal        shift, and go to state 47
    whatthehell  shift, and go to state 48
    plus         shift, and go to state 49
    minus        shift, and go to state 50
    times        shift, and go to state 51
    divby        shift, and go to state 52

    $default  reduce using rule 20 (Term)


state 31

   33 Operand: Constant .

    $default  reduce using rule 33 (Operand)


state 32

   32 Operand: Operation .

    $default  reduce using rule 32 (Operand)


state 33

   15 Predicate: PredMark Condition .

    $default  reduce using rule 15 (Predicate)


state 34

   16 Predicate: PredMark Assignment .

    $default  reduce using rule 16 (Predicate)


state 35

   14 Predicate: atom open_round_brackets PredMark . TermList close_round_brackets

    atom                  shift, and go to state 21
    variable              shift, and go to state 22
    num                   shift, and go to state 23
    real                  shift, and go to state 24
    open_round_brackets   shift, and go to state 25
    open_square_brackets  shift, and go to state 26

    TermList   go to state 53
    Term       go to state 54
    Function   go to state 28
    List       go to state 29
    Operand    go to state 55
    Constant   go to state 31
    Operation  go to state 32


state 36

   10 Rule: Predicate left_arrow PredicateList . dot

    dot  shift, and go to state 56


state 37

   12 PredicateList: Predicate .
   13              | Predicate . comma PredicateList

    comma  shift, and go to state 57

    $default  reduce using rule 12 (PredicateList)


state 38

   23 Function: atom open_round_brackets . TermList close_round_brackets

    atom                  shift, and go to state 21
    variable              shift, and go to state 22
    num                   shift, and go to state 23
    real                  shift, and go to state 24
    open_round_brackets   shift, and go to state 25
    open_square_brackets  shift, and go to state 26

    TermList   go to state 58
    Term       go to state 54
    Function   go to state 28
    List       go to state 29
    Operand    go to state 55
    Constant   go to state 31
    Operation  go to state 32


state 39

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52


state 40

   32 Operand: Operation .
   36 Operation: open_round_brackets Operation . close_round_brackets

    close_round_brackets  shift, and go to state 59

    $default  reduce using rule 32 (Operand)


state 41

   24 List: open_square_brackets close_square_brackets .

    $default  reduce using rule 24 (List)


state 42

   26 List: open_square_brackets List . close_square_brackets
   27     | open_square_brackets List . comma List close_square_brackets

    close_square_brackets  shift, and go to state 60
    comma                  shift, and go to state 61


state 43

   25 List: open_square_brackets Operand . close_square_brackets
   28     | open_square_brackets Operand . pipesym RestList close_square_brackets
   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand

    close_square_brackets  shift, and go to state 62
    pipesym                shift, and go to state 63
    plus                   shift, and go to state 49
    minus                  shift, and go to state 50
    times                  shift, and go to state 51
    divby                  shift, and go to state 52


state 44

   49 Condition: Term is . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 64
    Constant   go to state 31
    Operation  go to state 32


state 45

   42 Condition: Operand smaller . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 65
    Constant   go to state 31
    Operation  go to state 32


state 46

   41 Condition: Operand greater . Operand
   43          | Operand greater . equal Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25
    equal                shift, and go to state 66

    Operand    go to state 67
    Constant   go to state 31
    Operation  go to state 32


state 47

   44 Condition: Operand equal . smaller Operand
   45          | Operand equal . equal Operand
   46          | Operand equal . colon equal Operand
   47          | Operand equal . whatthehell equal Operand
   50 Assignment: Operand equal . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25
    smaller              shift, and go to state 68
    equal                shift, and go to state 69
    colon                shift, and go to state 70
    whatthehell          shift, and go to state 71

    Operand    go to state 72
    Constant   go to state 31
    Operation  go to state 32


state 48

   48 Condition: Operand whatthehell . equal equal Operand
   51 Assignment: Operand whatthehell . equal Operand

    equal  shift, and go to state 73


state 49

   37 Operation: Operand plus . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 74
    Constant   go to state 31
    Operation  go to state 32


state 50

   38 Operation: Operand minus . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 75
    Constant   go to state 31
    Operation  go to state 32


state 51

   39 Operation: Operand times . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 76
    Constant   go to state 31
    Operation  go to state 32


state 52

   40 Operation: Operand divby . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 77
    Constant   go to state 31
    Operation  go to state 32


state 53

   14 Predicate: atom open_round_brackets PredMark TermList . close_round_brackets

    close_round_brackets  shift, and go to state 78


state 54

   18 TermList: Term .
   19         | Term . comma TermList

    comma  shift, and go to state 79

    $default  reduce using rule 18 (TermList)


state 55

   20 Term: Operand .
   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 20 (Term)


state 56

   10 Rule: Predicate left_arrow PredicateList dot .

    $default  reduce using rule 10 (Rule)


state 57

   13 PredicateList: Predicate comma . PredicateList

    atom  shift, and go to state 11

    atom      [reduce using rule 17 (PredMark)]
    $default  reduce using rule 17 (PredMark)

    PredicateList  go to state 80
    Predicate      go to state 37
    PredMark       go to state 16


state 58

   23 Function: atom open_round_brackets TermList . close_round_brackets

    close_round_brackets  shift, and go to state 81


state 59

   36 Operation: open_round_brackets Operation close_round_brackets .

    $default  reduce using rule 36 (Operation)


state 60

   26 List: open_square_brackets List close_square_brackets .

    $default  reduce using rule 26 (List)


state 61

   27 List: open_square_brackets List comma . List close_square_brackets

    open_square_brackets  shift, and go to state 26

    List  go to state 82


state 62

   25 List: open_square_brackets Operand close_square_brackets .

    $default  reduce using rule 25 (List)


state 63

   28 List: open_square_brackets Operand pipesym . RestList close_square_brackets

    variable              shift, and go to state 22
    num                   shift, and go to state 23
    real                  shift, and go to state 24
    open_round_brackets   shift, and go to state 25
    open_square_brackets  shift, and go to state 26

    List       go to state 83
    RestList   go to state 84
    Operand    go to state 85
    Constant   go to state 31
    Operation  go to state 32


state 64

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   49 Condition: Term is Operand .

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 49 (Condition)


state 65

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   42 Condition: Operand smaller Operand .

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 42 (Condition)


state 66

   43 Condition: Operand greater equal . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 86
    Constant   go to state 31
    Operation  go to state 32


state 67

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   41 Condition: Operand greater Operand .

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 41 (Condition)


state 68

   44 Condition: Operand equal smaller . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 87
    Constant   go to state 31
    Operation  go to state 32


state 69

   45 Condition: Operand equal equal . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 88
    Constant   go to state 31
    Operation  go to state 32


state 70

   46 Condition: Operand equal colon . equal Operand

    equal  shift, and go to state 89


state 71

   47 Condition: Operand equal whatthehell . equal Operand

    equal  shift, and go to state 90


state 72

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   50 Assignment: Operand equal Operand .

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 50 (Assignment)


state 73

   48 Condition: Operand whatthehell equal . equal Operand
   51 Assignment: Operand whatthehell equal . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25
    equal                shift, and go to state 91

    Operand    go to state 92
    Constant   go to state 31
    Operation  go to state 32


state 74

   37 Operation: Operand . plus Operand
   37          | Operand plus Operand .
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand

    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 37 (Operation)


state 75

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   38          | Operand minus Operand .
   39          | Operand . times Operand
   40          | Operand . divby Operand

    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 38 (Operation)


state 76

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   39          | Operand times Operand .
   40          | Operand . divby Operand

    $default  reduce using rule 39 (Operation)


state 77

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   40          | Operand divby Operand .

    $default  reduce using rule 40 (Operation)


state 78

   14 Predicate: atom open_round_brackets PredMark TermList close_round_brackets .

    $default  reduce using rule 14 (Predicate)


state 79

   19 TermList: Term comma . TermList

    atom                  shift, and go to state 21
    variable              shift, and go to state 22
    num                   shift, and go to state 23
    real                  shift, and go to state 24
    open_round_brackets   shift, and go to state 25
    open_square_brackets  shift, and go to state 26

    TermList   go to state 93
    Term       go to state 54
    Function   go to state 28
    List       go to state 29
    Operand    go to state 55
    Constant   go to state 31
    Operation  go to state 32


state 80

   13 PredicateList: Predicate comma PredicateList .

    $default  reduce using rule 13 (PredicateList)


state 81

   23 Function: atom open_round_brackets TermList close_round_brackets .

    $default  reduce using rule 23 (Function)


state 82

   27 List: open_square_brackets List comma List . close_square_brackets

    close_square_brackets  shift, and go to state 94


state 83

   29 RestList: List .

    $default  reduce using rule 29 (RestList)


state 84

   28 List: open_square_brackets Operand pipesym RestList . close_square_brackets

    close_square_brackets  shift, and go to state 95


state 85

   30 RestList: Operand .
   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 30 (RestList)


state 86

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   43 Condition: Operand greater equal Operand .

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 43 (Condition)


state 87

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   44 Condition: Operand equal smaller Operand .

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 44 (Condition)


state 88

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   45 Condition: Operand equal equal Operand .

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 45 (Condition)


state 89

   46 Condition: Operand equal colon equal . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 96
    Constant   go to state 31
    Operation  go to state 32


state 90

   47 Condition: Operand equal whatthehell equal . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 97
    Constant   go to state 31
    Operation  go to state 32


state 91

   48 Condition: Operand whatthehell equal equal . Operand

    variable             shift, and go to state 22
    num                  shift, and go to state 23
    real                 shift, and go to state 24
    open_round_brackets  shift, and go to state 25

    Operand    go to state 98
    Constant   go to state 31
    Operation  go to state 32


state 92

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   51 Assignment: Operand whatthehell equal Operand .

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 51 (Assignment)


state 93

   19 TermList: Term comma TermList .

    $default  reduce using rule 19 (TermList)


state 94

   27 List: open_square_brackets List comma List close_square_brackets .

    $default  reduce using rule 27 (List)


state 95

   28 List: open_square_brackets Operand pipesym RestList close_square_brackets .

    $default  reduce using rule 28 (List)


state 96

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   46 Condition: Operand equal colon equal Operand .

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 46 (Condition)


state 97

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   47 Condition: Operand equal whatthehell equal Operand .

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 47 (Condition)


state 98

   37 Operation: Operand . plus Operand
   38          | Operand . minus Operand
   39          | Operand . times Operand
   40          | Operand . divby Operand
   48 Condition: Operand whatthehell equal equal Operand .

    plus   shift, and go to state 49
    minus  shift, and go to state 50
    times  shift, and go to state 51
    divby  shift, and go to state 52

    $default  reduce using rule 48 (Condition)
